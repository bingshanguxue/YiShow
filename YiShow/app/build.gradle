apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.1'

    defaultConfig {
        applicationId "com.bingshanguxue.yishow"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 2
        versionName "1.0.5"

        manifestPlaceholders = [
                AMAP_API_KEY: "dfdc6a377bb8f29ef509f0c315606d83", // 高德地图 API key
                PACKAGE_NAME: applicationId // apk 包名
        ]
    }

    signingConfigs {
        debug {
        }
        release {
        }
    }

    buildTypes {
        debug {
//            buildConfigField "boolean", "LOG_DEBUG", "true"//是否输出LOG信息
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
//            buildConfigField "boolean", "LOG_DEBUG", "false"//是否输出LOG信息
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }


    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName
                if (variant.buildType.name == "release") {
                    // 输出apk名称为mfh_cashier_v1.0.1_101915_wandoujia.apk
                    fileName = "bingshanguxue_yishow_v${defaultConfig.versionName}_${releaseTime()}${defaultConfig.versionCode}.apk"
                } else {
                    fileName = "bingshanguxue_yishow_v${defaultConfig.versionName}_${releaseTime()}_beta.apk"
                }

                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    productFlavors {
        bingshanguxue {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "bingshanguxue"]
        }
        Xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Xiaomi"]
        }
        _360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "360"]
        }
        Baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Baidu"]
        }
        Wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Wandoujia"]
        }
        fir {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "fir"]
        }
        Umeng {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Umeng"]
        }
        GooglePlay {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "GooglePlay"]
        }
        Meizu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Meizu"]
        }
        Huawei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Huawei"]
        }
        QQ {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "QQ"]
        }
        PP {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "PP"]
        }
    }

    File propFile = file('signing.properties');
    if (propFile.exists()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            android.buildTypes.release.signingConfig = null
        }
    } else {
        android.buildTypes.release.signingConfig = null
    }

}



dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:design:23.0.1'
    compile 'com.android.support:support-v4:23.0.1'
    compile 'com.android.support:recyclerview-v7:23.0.1'

    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.nineoldandroids:library:2.4.0'
    compile files('libs/libammsdk.jar')
    compile files('libs/zxing.jar')
    compile files('libs/xstream-1.4.7.jar')
    //高德地图
    compile files('libs/Android_2DMapApi_V2.5.0.jar')
    compile files('libs/Android_Location_V1.3.3.jar')
    //高德地图定位SDK
    compile files('libs/AMap_Services_V2.4.0.jar')
    compile files('libs/KJFrameForAndroid_v2.223.jar')
    //友盟统计分析
    compile 'com.umeng.analytics:analytics:latest.integration'
}
